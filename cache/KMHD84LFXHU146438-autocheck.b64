<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover">
    
   	<script type="text/javascript" src="https://connect.carsimulcast.com/report_assets/autocheckfqru_10317250630095842.js" data-dtconfig="app=8df02d028235d9e4|cuc=rx2so82w|agentId=13f4282adeb2764|owasp=1|mel=100000|featureHash=ICANVfqru|dpvc=1|lastModification=1758212216491|tp=500,50,0|rdnt=1|uxrgce=1|srbbv=2|agentUri=https://connect.carsimulcast.com/report_assets/autocheckfqru_10317250630095842.js|reportUrl=/members/rb_bf65458ayt|rid=RID_1935506466|rpid=1333036407|domain=autocheck.com"></script><link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap">
    <link rel="stylesheet" href="https://www.autocheck.com/members/common/css/bootstrap.min.css" media="all">
    <link rel="stylesheet" href="https://www.autocheck.com/members/common/css/common.css" media="screen">
    	
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" crossorigin="anonymous">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.min.css">
   
    <link rel="stylesheet" href="https://www.autocheck.com/reportservice/report/fullReport/stylesheet/full-report.css" media="screen">
    <link rel="stylesheet" href="https://www.autocheck.com/reportservice/report/fullReport/stylesheet/full-report-mqueries.css" media="screen">
    <link rel="stylesheet" href="https://www.autocheck.com/reportservice/report/fullReport/stylesheet/browserPrint.css" media="print">
    <link rel="stylesheet" href="https://www.autocheck.com/members/common/css/fastlink.css" media="screen">
    
    <script type="text/javascript" src="https://www.autocheck.com/members/common/js/fastlink.js"></script>
    <script type="text/javascript" src="https://www.autocheck.com/members/common/js/jquery-3.7.1.min.js"></script>
    <script type="text/javascript" src="https://www.autocheck.com/members/common/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="https://www.autocheck.com/members/common/js/init.js"></script>
    
    <title>Welcome to AutoCheck - Full Report</title>
    
    <!-- This file contains any tags/js that need to be placed in the HEAD tag of a HTML Page -->

<!-- GTM Manager -->

	<script type="text/javascript" src="https://www.autocheck.com/members/common/js/gtm-prod.js"></script>
	
	




    
</head>
<body id="fastLinkFullReport">
<!--@@@X-Report-Status: Full Report@@@-->

<div class="bootstrap">
<div class="container-fluid">
<div align="center">
  <div class="fastlinkButton">
    <br/>
	<button name="singleSummaryButton" id="singleSummaryButton" class="button">
        &nbsp;Print Report&nbsp;
    </button>
  </div>
  
</div>

 	
 <!-- Content starts here -->
  <div id="freeLinkReport"><div>
    	<!-- request from internal -->
        
		      <script type="text/javascript" src="https://www.autocheck.com/reportservice/report/fullReport/js/main.js"></script>
<div id="top-KMHD84LFXHU146438">
     	 
     
       
         
        
     
      
        
      
     
     
    	
    
    	
       <!--Vieweable Block-->
      <div class="container-fluid" id="full-report">
        <!--Web Version-->
      	
 
      	  		<!--Logo section-->

<div class="logo-section">
	<div class="row ">
		
		<div class="col-12 fastlink-margin">
		 
		  
		  
		   <a href="https://www.autocheck.com/vehiclehistory/" target="_blank">
			<img class="logo" src="https://www.autocheck.com/reportservice/common/img/experian-logo.png" alt="Experian Logo">
		  </a > 
		  
		</div>
		<div class="row elite-section">
        
			<div class="col-12 col-md-6 pl-0 col-6-print">
				<h1 class="main-header">Experian AutoCheck Report</h1> 
				<span class="report-date">Report run: <span>10/05/2025 15:55:25 EDT</span> </span>
			</div>
			

			
			
			
		</div>

	</div>
</div> 
  	  			<main>
  	     			<!--Prequal Ad-->
  	    			
 	        			
		  			
		  			
		  			<!--carOffer Ad-->
		  			
  	    			
				
  					<!--decode 3box section-->

<div class="row row-flex my-2 three-box-summary" id="three-box-summary">
  
 
 <!--VIN DECODE SECTION-->
 
 <!--display all 3-->
    
 
  <!--display only decode and owner-->
    
  
  <!--display only decode and Score-->
   	
    <div class="col-12 col-md-6 col-lg-6 mb-2 mb-md-0 col-6-print" >	
   
  
  <!--display only decode -->
    
      
    <div class="summary-box">
      <div class="mb-2">
      <div class="make-year-title">
	    <span class="box-title-decode">2017 </span> <span class="box-title-decode">Hyundai Elantra Limited / SE / Value Edition</span> 
	  </div >  
	   
	    <span class="box-subtitle">Sedan 4D</span> <span class="box-subtitle"> (2.0L I4 SMPI Gasoline)</span >
	  </div >
	  
	  <div>
	    <div class="decode-box-row row odd">
	      <div class="col-6 decode-label">VIN:</div ><div class="decode-data col-6" >KMHD84LFXHU146438</div > 
	    </div >	    
	    <div class="decode-box-row row">
	      <div class="col-6 decode-label">Class:</div ><div class="decode-data col-6" >Car - Compact</div > 
	    </div >
	    <div class="decode-box-row row odd">
	      <div class="col-6 decode-label">Country of Assembly:</div ><div class="decode-data col-6" >South Korea</div > 
	    </div >
          
              <div class="decode-box-row row">
                  <div class="col-6 decode-label">Vehicle Age:</div ><div class="decode-data col-6">8 year(s)</div >
              </div >
              
              
              
                  <div class="decode-box-row row odd">
                      <div class="col-6 decode-label">Last Reported Odometer:</div ><div class="decode-data col-6">154,597 (05/20/2021)</div >
                  </div >
              
          

          

	    
	    	
	      <div class="decode-box-row row">
	        
	          <div class="col-6 decode-label">Vehicle Use:</div ><div class="decode-data col-6"><span>Rental</span ></div > 
	        
	        
	    </div >
	    
	    
	   
	    
	     






    
	    
	  </div>
    </div>	            
  </div>
  
 
  
 
 <!--SCORE SECTION-->

 
    	
    
     <!-- OWNER-->
     
    
    
    
    <!-- NO OWNER-->
     
      <div class="col-12 col-md-6 col-lg-6 my-2 mb-2 mb-md-0 pl-lg-2 mt-lg-0 col-6-print" id="decodeAndScore">
        <div class="summary-box">
           <div class="mb-2 text-center mt-2  d-sm-none  d-md-block ">
	         <span class="box-title-score">AutoCheck Score</span >
	       </div >
	       
	       
	       
	    <div  class="row score-meter-section">
        
         <div class="col-sm-1 col-lg-2 col-1-print"></div>
        
        <div class="score-area col-12 col-sm-5 col-md-10 col-lg-8 col-10-print">
          
          <img src="https://www.autocheck.com/reportservice/report/fullReport/img/auto-check-gauge-position-1.svg"  alt="Autocheck score dial"/>
          
         
         
         
	      
	      
         
         
         
          <div class="mainScore" >
	        <span>68</span>
	      </div >
	      
	      <div class="low-score">
		    <span>75</span>
		  </div>
		  
		  <div class="high-score">
		    <span>87</span>
		  </div>
		 
	      
       </div >
       
       <div class="col-md-1 col-lg-2 d-none d-md-block col-1-print"></div>
       
       <div class="score-text col-12 col-sm-6 col-md-12">
     
         <span class="box-title-score-md d-none d-sm-block d-md-none display-print">AutoCheck Score</span >
       
       
       
         <p class="mt-1 pb-1 ">Similar vehicles usually range between 
	      <span class="inline-high-low">
	        <span>75</span> and <span>87</span >
	      </span> 
	    </p >
       </div >
       
        
      </div>
      
      <div class="score-more-info noPrint">
	    <a data-toggle="modal" data-target="#xKMHD84LFXHU146438" ><span class="more-info-text">More Information</span>
	    <img src="https://www.autocheck.com/reportservice/report/fullReport/img/icon-more-information-purple.svg" alt="More Information icon">
	    </a >
	  </div >   
	       
     </div><!--summary box-->
     
     
     
	  </div>    
     
    
    
 
<!-- Modal -->


 	
 
<div class="modal fade noPrint" id="xKMHD84LFXHU146438" tabindex="-1" role="dialog" aria-labelledby="xKMHD84LFXHU146438"  aria-hidden="true">



  <div class="modal-dialog modal-dialog-centered" role="document" id="score-modal">
    <div class="modal-content">
      <div class="modal-header">
        <span class="modal-title title">Your AutoCheck Score Information</span>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body ">
      <div class="row" >
        <div class="col-12">
          <div class="media modal-info-section">
               <img class="icon-img mr-sm-3" src="https://www.autocheck.com/reportservice/report/fullReport/img/icon-more-information.svg" alt="More Informtion for Modal">
               <div class="media-body">
                 <span class="modal-info-section-text">The patented AutoCheck score predicts the likelihood a car will be on the road in 5 years. It compares vehicles of similar age and class based on a scale of 1-100. The AutoCheck score is based on a proprietary model to help you understand a vehicle&#39;s predicted reliability as it pertains to age, number of owners, accidents and other vehicle history factors.</span >    
                </div>
               </div>
	        
        </div>
      </div>  	 
      
        <div class="row row-flex my-2" >
          <div class="col-12 col-md-4">	      
            <div class="summary-box-modal-small">
              <img class="box-icon-img " src="https://www.autocheck.com/reportservice/report/fullReport/img/modal-autocheck-score-vehicle-comparison.svg" alt="Vehicle Comparison">
              <span class="caption">Vehicle Comparison</span>
              <p>Other comparable <span class="callout">2017</span> vehicles in the <span class="callout">Car - Compact</span> typically score between <span class="callout">75-87</span>.</p>
            </div>
            <div class="summary-box-modal-small mt-3">
               <img class="box-icon-img " src="https://www.autocheck.com/reportservice/report/fullReport/img/modal-autocheck-score-vehicle-outlook.svg" alt="Vehicle Outlook">
              <span class="caption">Vehicle Outlook</span>
              <p>This vehicle has a  <span class="callout">68%</span> likelihood that it will be on the road in <span class="callout">5 years.</span></p>
          
            </div>
          </div> 
          
          <div class="col-12 col-md-4 mt-3 mt-md-0">	      
            <div class="summary-box-modal">
              <div class="text-center">
                <img class="box-icon-img " src="https://www.autocheck.com/reportservice/report/fullReport/img/modal-autocheck-score-increasing-factors.svg" alt="Increasing factors">
                <span class="caption">Increasing Factors</span>
              </div >
              
              <p class="text-center">No increasing factors</p >
            </div>
          </div> 
          
          <div class="col-12 col-md-4 mt-3 mt-md-0">	      
            <div class="summary-box-modal">
              <div class="text-center">
                <img class="box-icon-img " src="https://www.autocheck.com/reportservice/report/fullReport/img/modal-autocheck-score-decreasing-factors.svg" alt="decreasing factors">
                <span class="caption">Decreasing Factors</span>
              </div>
               <ul>
                <li>Accident - moderate</li >
                <li>Mileage (actual or estimated)</li >
                
              </ul >
              
            </div>
          </div>
        </div >
      </div>
      
    </div>
  </div>
</div>   
 	

</div>	  	      

         				
         			<div class="sections" >
         				<!--at a glance section-->
<div id="at-glance">
	<div class="header top-header">Vehicle History at a Glance</div>  	
      <div class="section-data">
      	<div class="row row-flex my-2 mt-lg-4">
      	
      		<!-- State Title Brand Box-->
      		 <div class="col-12 col-md-6 col-lg-4 col-lg-4-print mb-3 pr-lg-2 pr-lg-print-2">
      	      <div class="card">
               <div class="card-body">
               		<div class="media">
					  
                
                		<img class="img-fluid card-icon mr-3" src="https://www.autocheck.com/reportservice/report/fullReport/img/vhg-title-brand-no-issue.svg" alt="vhg-title-brand-no-issue"/>
					  <div class="media-body">
					    <p class="large-title">State Title Brand</p>
	               	 	<p class="subtitle">
	               	 		<span></span>
	               	 	</p>
					  </div>
					</div>
                </div>
               	<div class="card-footer">
                	<div class="card-footer-text">
                		
                		
                		
                		<img class="img-fluid card-footer-icon-sm" src="https://www.autocheck.com/reportservice/report/fullReport/img/icon-success-pass.svg" alt="icon-success-pass"/>
                		
                		</div>
                		<div class="card-footer-text text-center">
                		<span class="card-footer-text-adjustment">
                			<span>Clean</span>
                		</span>
                	</div>
                </div>
            </div>
            </div>
            
            <!-- Auction Brand / Issues Box-->
            <div class="col-12 col-md-6 col-lg-4 col-lg-4-print mb-3 pr-lg-2 pl-lg-2 pr-lg-print-2">
      	      <div class="card">
                 <div class="card-body">
                 	<div class="media">
					  
                		<img src="https://www.autocheck.com/reportservice/report/fullReport/img/vhg-auction-universal.svg" class="img-fluid card-icon mr-3" alt="auction brand icon">
					  <div class="media-body">
					    <p class="large-title">Auction Brand / Issues</p>
	                	<p class="subtitle">
	               	 		<span></span>
	               	 	</p>
					  </div>
					</div>
                </div>
                <div class="card-footer">
                	<div class="card-footer-text">
                		
                		
                		
                		<img class="img-fluid card-footer-icon-sm" src="https://www.autocheck.com/reportservice/report/fullReport/img/icon-success-pass.svg" alt="icon-success-pass"/>
                		</div>
                	<div class="card-footer-text text-center">
                		<span class="card-footer-text-adjustment">
                			<span>No Issue</span>
                		</span>
                	</div>
                </div>
            </div>
            </div>
            
            <!-- Accident / Damage Box-->
            <div class="col-12 col-md-6 col-lg-4 col-lg-4-print mb-3 pr-lg-3 pl-lg-2">
      	       <div class="card">
	               <div class="card-body">
		            	<div class="media">
						  
	                
	                		<img class="img-fluid card-icon mr-3" src="https://www.autocheck.com/reportservice/report/fullReport/img/vhg-accident-damage-issue-found.svg" alt="vhg-accident-damage-issue-found"/>
						  <div class="media-body">
						    <p class="large-title">Accident / Damage</p>
		               	 	<p class="subtitle">
	               	 			<span></span>
	               	 		</p>
						  </div>
						</div>
	                </div>
                <div class="card-footer">
                	<div class="card-footer-text">
                		
                		
                		
                		<img class="img-fluid card-footer-icon-sm" src="https://www.autocheck.com/reportservice/report/fullReport/img/icon-warning.svg" alt="icon-warning"/>
                		
                		</div>
                		<div class="card-footer-text text-center">
                		<span class="card-footer-text-adjustment">
                			<span>Damage Reported</span>
                		</span>
                	</div>
                </div>
            </div>
            </div>
            
      		<!-- Open Recall Check-->
      		<div class="col-12 col-md-6 col-lg-4 col-lg-4-print mb-3 pr-lg-2 pl-lg-3 pr-lg-print-2">
      	       <div class="card">
                	<div class="card-body">
                     	<div class="media">
						  
                		<img src="https://www.autocheck.com/reportservice/report/fullReport/img/vhg-open-recall-check-universal.svg" class="img-fluid card-icon mr-3" alt="recall check icon">
						  <div class="media-body">
						  		<p class="large-title">Open Recall Check</p>
                				
					  		</div>
						</div>
                </div>
                <div class="card-footer">
                	<div class="card-footer-text">
                		
                		
                		
                		<img class="img-fluid card-footer-icon-sm" src="https://www.autocheck.com/reportservice/report/fullReport/img/icon-success-pass.svg" alt="icon-success-pass"/>
                		
                		</div>
                		<div class="card-footer-text text-center">
                		<span class="card-footer-text-adjustment">
                			<span>No Open Recalls</span>
                		</span>
                	</div>
                </div>
            </div>
            </div>
            
            <!-- Insurance Loss / Tranfer -->
            <div class="col-12 col-md-6 col-lg-4 col-lg-4-print mb-3 pr-lg-2 pl-lg-2 pr-lg-print-2">
      	      <div class="card">
                <div class="card-body">
                     	<div class="media">
						  	
	                
	                		<img class="img-fluid card-icon mr-3" src="https://www.autocheck.com/reportservice/report/fullReport/img/vhg-insurance-loss-title-no-issue.svg" alt="vhg-insurance-loss-title-no-issue"/>
						  <div class="media-body">
						  	<p class="large-title">Insurance Loss / Transfer</p>
					  		</div>
						</div>
                </div>
                  <div class="card-footer">
                	<div class="card-footer-icon">
                		
                		
                		
                
                		<img class="img-fluid card-footer-icon-sm" src="https://www.autocheck.com/reportservice/report/fullReport/img/icon-success-pass.svg" alt="icon-success-pass"/>
                	
                	</div>
                	<div class="card-footer-text text-center">
                    	<span class="card-footer-text-adjustment">
                    		<span>No Issue</span>
                    	</span>
                	</div>
                </div>
            </div>
            </div>
            
            <!-- Odometer Check-->
            <div class="col-12 col-md-6 col-lg-4 col-lg-4-print mb-3 pr-lg-3 pl-lg-2">
      	      <div class="card">
              	<div class="card-body">
                     	<div class="media">
						  	
	                
	                		<img class="img-fluid card-icon mr-3" src="https://www.autocheck.com/reportservice/report/fullReport/img/vhg-odometer-check-no-issue.svg" alt="vhg-odometer-check-no-issue"/>
						  <div class="media-body">
	  		                	<p class="large-title">Odometer Check</p>
		                		<p class="subtitle">
		               	 			Last reported odometer:
		               	 			</br>
									<span class="font-weight-bold">154,597</span>
									<span class="font-weight-bold">(05/20/2021)</span>
								</p>
					  		</div>
						</div>
               	</div>
                <div class="card-footer">
                	<div class="card-footer-icon">
                		
                		
                	
                		
                		<img class="img-fluid card-footer-icon-sm" src="https://www.autocheck.com/reportservice/report/fullReport/img/icon-success-pass.svg" alt="icon-success-pass"/>
                	
                	</div>
                	<div class="card-footer-text text-center">
                		<span class="card-footer-text-adjustment">
                			<span>No Issue</span>
                		</span>
                	</div>
                </div>
            </div>
            </div>
      		
      		<!-- CPO Box-->
           <div class="col-12 col-md-6 col-lg-4 col-lg-4-print mb-3 pr-lg-2 pl-lg-3 pr-lg-print-2">
      	        <div class="card">
                <div class="card-body">
                     	<div class="media">
						  	
                			<img src="https://www.autocheck.com/reportservice/report/fullReport/img/vhg-cpo-universal.svg" class="img-fluid card-icon mr-3" alt="cpo icon">
					  		<div class="media-body">
			               	 	<p class="large-title">Certified Pre-Owned</p>
			               	 	
								
				  			</div>
						</div>
                </div>
                 <div class="card-footer">
                	<div class="card-footer-icon">
                		
                		
                	
                		<img class="img-fluid card-footer-icon-sm" src="https://www.autocheck.com/reportservice/report/fullReport/img/icon-success-pass.svg" alt="icon-success-pass"/>
                	
                	</div>
                	<div class="card-footer-text text-center">
                			<span class="card-footer-text-adjustment">
                			<span>No CPO Info Available</span>
                			
                		</span>
                	</div>
                </div>
            </div>
            </div>
            
            <!-- Service / Repair Box -->
            <div class="col-12 col-md-6 col-lg-4 col-lg-4-print mb-3 pr-lg-2 pl-lg-2 pr-lg-print-2">
      	    	<div class="card">
                <div class="card-body">
                     	<div class="media">
						  	
                			<img src="https://www.autocheck.com/reportservice/report/fullReport/img/vhg-service-repair-universal.svg" class="img-fluid card-icon mr-3" alt="service repair icon">
						  <div class="media-body">
						  	<p class="large-title">Service / Repair</p>
		               	 	<p class="subtitle">
		               	 		<span></span>
		               	 	</p>
					  		</div>
						</div>
               	 	<!-- In a future release this will link to a "service history report"  For now just a placeholder till that time comes
               	 	just need to update the href location to new report-->
               	 	<!--
               	 	<p th:if="${!form.pdf}" class="text-center subtitle">
               	 		<a href="#" target="_blank">VIEW SERVICE HISTORY&nbsp;<img class="img-fluid link-icon-sm" th:src="@{__${serverPath}__report/fullReport/img/vhg-open-window.svg}" alt="new window icon"/></a>
               	 	</p>
               	 	-->
                </div>
                <div class="card-footer">
                	<div class="card-footer-icon">
                		
                		
                	
                		<img class="img-fluid card-footer-icon-sm" src="https://www.autocheck.com/reportservice/report/fullReport/img/icon-success-pass.svg" alt="icon-success-pass"/>
                		
                	</div>
                	<div class="card-footer-text text-center">
                		<span class="card-footer-text-adjustment">
                			<span>No Issue</span>
                		</span>
                	</div>
                </div>
            </div>
            </div>
            
            <!-- Additional History Box -->
            <div class="col-12 col-lg-4 col-lg-4-print mb-3 pr-lg-3 pl-lg-2">
      	      <div class="card">
                <div class="card-body">
                     	<div class="media">
						  	
	                
	                		<img class="img-fluid card-icon mr-3" src="https://www.autocheck.com/reportservice/report/fullReport/img/vhg-additional-history-no-issue.svg" alt="vhg-additional-history-no-issue"/>
						  	<div class="media-body">
						  		<p class="large-title">Additional History</p>
			               	 	<p class="subtitle">
			               	 		<span></span>
			               	 	</p>
				  			</div>
						</div>
                </div>
                 <div class="card-footer">
                	<div class="card-footer-icon">
                		
                	
                		<img class="img-fluid card-footer-icon-sm" src="https://www.autocheck.com/reportservice/report/fullReport/img/icon-success-pass.svg" alt="icon-success-pass"/>
                
                	</div>
                	<div class="card-footer-text text-center">
                		<span class="card-footer-text-adjustment">
                			<span>No Issues Reported</span>
                		</span>
                	</div>
                </div>
            </div>
            </div>
      	</div><!--row>-->
      </div>
    </div>
     				</div>
     				
     				
<!--Assured BBP section-->
<div id="assured-section">
  	<div class="row">
		<div class="row main">
  			<div class="col-12 col-md-2 col-lg-2 my-auto pb-3 pb-md-0 text-center col-2-print">
  				<img class="img-fluid" src="https://www.autocheck.com/reportservice/report/fullReport/img/buyback-1-year.svg" alt="vhg-title-brand-no-issue"/>
  	       </div>
			<div class="col-12 col-md-7 col-lg-8 my-auto pb-3 pb-md-0 col-8-print">
				<h1 class="title">This vehicle is eligible for Buyback Protection</h1> 
				<span>Due to the vehicle’s history showing no reported major state title brands. <a href="http://www.autocheck.com/vehiclehistory/buyback-terms" target="_blank">Terms & Conditions</a></span>
			</div>
			<div class="col-12 col-md-3 col-lg-2 my-auto col-2-print">
				<a href="http://www.autocheck.com/vehiclehistory/autocheck/en/buyback-protection" target="_blank" class="btn btn-primary btn-block">Learn More</a>
			</div>
		</div>
	</div>
</div>
     				
     				<div class="sections">
         				<!--Accident section-->
<div id="accident" >
	<div class="header">
		<span>
			<img src="https://www.autocheck.com/reportservice/report/fullReport/img/title-icon-accident-damage.svg" class="header-icon"
				alt="damage icon">
			Accident &amp; Damage<a class="backtotop-link" href="#" data-top-id="top-KMHD84LFXHU146438">Back To Top</a>
		</span>
	</div>
	<div class="section-data">
		<div class="row">
			<div class="col-xs-12 col-sm-6 col-md-6 col-lg-6 pb-4 order-sm-2 order-md-1 order-lg-1 order-2 col-6-print">
				<div class="accident-box">
					
					<div class="row">
					   
					  <div  class="col-12"> 
					  
					     <img class="car-img-icons img-fluid" src="https://www.autocheck.com/reportservice/report/fullReport/img/accident-car-no-poi-available.svg" alt="accident-car-no-poi-available"/>
						       
						
							   <!--for loop for poi rings-->
						  
						</div>
					
					</div>

					<div class="row row-flex">
					  <!--Airbags Img-->
						<div class="col-6 col-sm-6 col-md-6 col-lg-3 event align-self-baseline">
                            <img class="special-icons  img-fluid" src="https://www.autocheck.com/reportservice/report/fullReport/img/accident-airbag-deployed-off.svg" alt="accident-airbag-deployed-off"/>
						  
							<span class="accident-type-text d-block">Airbag Deployed</span>
						</div>
						
						<!--structural Damage Img-->
						<div class="col-6 col-sm-6 col-md-6 col-lg-3 mb-2 mb-sm-0">
						   
						  <img class="special-icons  img-fluid" src="https://www.autocheck.com/reportservice/report/fullReport/img/accident-structural-damage-off.svg" alt="accident-structural-damage-off"/>
						  
							<span class="accident-type-text d-block">Structural Damage</span>
						</div>
						
						<!--Overturned Img-->
						<div class="col-6 col-sm-6 col-md-6 col-lg-3">
						    <img class="special-icons  img-fluid" src="https://www.autocheck.com/reportservice/report/fullReport/img/accident-overturned-off.svg" alt="accident-overturned-off"/>
						           									
							<span class="accident-type-text d-block">Overturned</span>
						</div>
						
						
				<!--severity-->
						<div class="col-6 col-sm-6 col-md-6 col-lg-3">
						  <img class="special-icons img-fluid" src="https://www.autocheck.com/reportservice/report/fullReport/img/accident-severe-off.svg" alt="accident-severe-off"/>
						       
						       
							 
       
       					 	
        										
						  		<span class="accident-type-text d-block">Unknown</span>	
       						 
       				       
						  </div>		
						
					</div>

				</div>	<!--accident-box-->
			</div>	<!--col12 -->

			<div class="col-xs-12 col-sm-6 col-md-6 col-lg-6 order-sm-2 order-md-2 order-lg-2 order-2 col-6-print">
				<table class="table table-striped">
					<thead>
						<tr scope="row">
							<th scope="col">Damage Date</th>
							<th scope="col">Damage Type</th>
							<th scope="col">Severity</th>
						</tr>
					</thead>
					<tbody>
						<div class="rTableRow">
							<tr scope="row">
								<td>10/11/2019</td>
								<td>Collision</td>
								<td>Unknown</td>

							</tr>
						</div>

					</tbody>
				</table>



				

				<p class="text-center">Not all accidents and/or damage events are reported to Experian. Inspection by a third party prior to purchase is recommended. See  <span class="font-weight-bold">Detailed Vehicle History</span> for more information regarding accident/damage events.</p >
                
			</div>

			

		</div>		<!--row -->
	</div>	<!--section data-->

</div><!--accident-->
          				
          				
          				  <!--Odometer section-->
        <div id="odometer">
	        <div class="header">
				<span>
				<img class="header-icon" src="https://www.autocheck.com/reportservice/report/fullReport/img/title-icon-odometer-check.svg" alt="Odometer Dial">
					Odometer Check<a class="backtotop-link" href="#" data-top-id="top-KMHD84LFXHU146438">Back To Top</a>
				</span></div>
	        
	        <div class="media info-section">
               <div class="header-image">
				  <img class="icon-img mr-sm-3" src="https://www.autocheck.com/reportservice/report/fullReport/img/icon-success-pass.svg" alt="icon-success-pass"  >
			   </div>  
               <div class="media-body">
                  
                  
                  
		             <span class="info-section-header-good">Your Vehicle Checks Out  </span><br>
		             <span class="info-section-text">No odometer brands, rollbacks, rollover or tampering has been reported to AutoCheck from state Division of Motor Vehicles (DMV) or auction sources. AutoCheck also examined the sequence of reported odometer readings to determine if there are any potential discrepancies.</span>
                  
                </div>
            </div>
	        
	        	
          <div class="section-data">
          	<div class="row row-flex my-4 odometer-margin">
          	
          	
	      <div class="col-12 col-md-4 mb-3 mb-md-0 pr-md-2 col-4-print">
	      	<div class="odometer-box">
	      	
	      	  
	      	  
		        <img class="odometer-box-icon" src="https://www.autocheck.com/reportservice/report/fullReport/img/icon-success-pass.svg" alt="icon-success-pass" />
	          
	      	
	      	
	      	  
	      	
	      		  <div class="box-title-odometer">State Title Odometer Check</div>
	                
	                
	                
	                
	                <p class="odometer-box-text">
	                  <span>No issues reported</span >
	                </p>
	                
	      		  
	      	</div>
	      </div>	
	      
	      
	      <div class="col-12 col-md-4 mb-3 mb-md-0 px-md-2 col-4-print">
	      	<div class="odometer-box">
	      	   
		        <img class="odometer-box-icon" src="https://www.autocheck.com/reportservice/report/fullReport/img/icon-success-pass.svg" alt="icon-success-pass" />
	          	 
	      		  <div class="box-title-odometer">Auction Odometer Check </div >
	      		  
	      		  
	                
	                
	                
	                <p class="odometer-box-text">
	                  <span>No issues reported</span >
	                </p>
	                
	      	  </div>
	      </div>
	      
	      
	      	
	      <div class="col-12 col-md-4 pl-md-2 col-4-print">
	      	<div class="odometer-box">
	      	  
		        <img class="odometer-box-icon" src="https://www.autocheck.com/reportservice/report/fullReport/img/icon-success-pass.svg" alt="icon-success-pass" />
	          	 
	      		 <div class="box-title-odometer">Odometer Calculation Check </div>
	      		 
	                
	             <p class="odometer-box-text">
	                  <span>No issues reported</span >
	             </p>
	      	</div>
	      	
	      </div>	
	    	
          	
          </div>
        </div>
      </div>
          				 <!--History section-->
        <div id="history">
	        <div class="header">
				<span>
					<img class="header-icon" src="https://www.autocheck.com/reportservice/report/fullReport/img/title-icon-detailed-vehicle-history.svg"
					alt="Detailed Vehicle History Icon">
					Detailed Vehicle History <a class="backtotop-link" href="#" data-top-id="top-KMHD84LFXHU146438">Back To Top</a>
				</span>
			</div>
	        <div class="info-section row mx-0">
	        	<div class="col-12 text-center">
	        		<span class="info-section-text">Below are the historical events for this vehicle listed in chronological order. </span ><br>
	        		<span class="info-section-text"><strong>Vehicle:</strong> 
	        		    <span>2017 </span> 
	        		    <span>Hyundai Elantra Limited / SE / Value Edition</span> 
						(<span>KMHD84LFXHU146438</span>) 
						<strong> Report Run Date: </strong> <span>10/05/2025 15:55:25 EDT</span> 
					</span >
	        	</div>
	        </div> 	  	
	
		 	<!--Desktop-->
			<div class="container py-2 mt-2 mb-2 d-none d-lg-block history-web-print">
			  <div class="row">
			    <!-- Year Badge-->
			    <div class="col-auto text-center flex-column d-none d-sm-flex mar-left-browser-print" >
			      <div class="row">
			        <div class="col">&nbsp;</div>
			        <div class="col">&nbsp;</div>
			      </div>
			     <span class="h4">
			        <span class="badge badge-blue">
			         	<span>2016</span>
			        </span>
			      </span>
			      <div class="row h-100">
			        <div class="col border-right">&nbsp;</div>
			        <div class="col">&nbsp;</div>
			      </div>
			    </div>
			    <!-- Owner Sequence Header Title-->
			    <div class="col py-1 pr-3 pl-0 mar-right-browser-print">
			      <div class="card owner-card-radius">
			      	<div class="card-header owner-header show" data-toggle="collapse" data-target="#collapse-999-KMHD84LFXHU146438">
			 	 		<span class="arrow">
			      			
    						<a data-toggle="collapse" href="#collapse-999-KMHD84LFXHU146438" 
    							id="heading-999" class="d-block collapse-link blue" aria-expanded="true" aria-controls="collapse-999-KMHD84LFXHU146438">
		      					
		      					<span>All Reported Events</span>
		      					
							</a>
			    		 </span>
  					</div>
  					
  					<div id="collapse-999-KMHD84LFXHU146438" class="collapse show" aria-labelledby="heading-999-KMHD84LFXHU146438">
			        <div class="card-body pt-0 pb-0 pl-0 pr-0" >
			          	<div class="card-text">
			          	 <div class="card owner-card-radius">
			      			
  							
							<div class="card-header owner-card-header-blue owner-card-header-white">
			      				
			        		</div>
  							
			        		<div class="card-body pt-0 pb-0 px-0">
			          			<div class="card-text"> 
			          				 <table class="table table-stripedX">
									  <thead>
									    <tr class="table-header-row blue">
									      <th scope="col" class="w-15 owner-card-cell-border-right">Event Date</th>
									      <th scope="col" class="w-20 owner-card-cell-border-right">Location</th>
									      <th scope="col" class="w-15 owner-card-cell-border-right">Odometer</th>
									      <th scope="col" class="w-15 owner-card-cell-border-right">Data Source</th>
									      <th scope="col">Details </th>
									      <td scope="col"></td>
									    </tr>
									  </thead>
									  <tbody>
									    <tr>
									      <td scope = "row" class="owner-card-cell-border-right">
											<span>05/17/2016</span>
					 					  </td>
									      <td class="owner-card-cell-border-right">
									        <span>CALGARY, AB</span>
									      </td>
									      <td class="owner-card-cell-border-right">
									      	
										  </td>
									      <td class="owner-card-cell-border-right"> <!--Data Source-->
									      	 
								
											<span>Motor Vehicle Dept.</span>
										  </td>
									      <td class="pr-0">
									      	<span>Canadian Renewal<br>Rental</span>
							    					
					           			  </td>
									      <td>
									      	
									      </td>
									    </tr>
									    <tr>
									      <td scope = "row" class="owner-card-cell-border-right">
											<span>12/05/2016</span>
					 					  </td>
									      <td class="owner-card-cell-border-right">
									        <span>CALGARY, AB</span>
									      </td>
									      <td class="owner-card-cell-border-right">
									      	
										  </td>
									      <td class="owner-card-cell-border-right"> <!--Data Source-->
									      	 
								
											<span>Motor Vehicle Dept.</span>
										  </td>
									      <td class="pr-0">
									      	<span>Canadian Renewal<br>Rental</span>
							    					
					           			  </td>
									      <td>
									      	
									      </td>
									    </tr>
									    <tr>
									      <td scope = "row" class="owner-card-cell-border-right">
											<span>03/04/2017</span>
					 					  </td>
									      <td class="owner-card-cell-border-right">
									        <span>AB</span>
									      </td>
									      <td class="owner-card-cell-border-right">
									      	
										  </td>
									      <td class="owner-card-cell-border-right"> <!--Data Source-->
									      	 
								
											<span>Motor Vehicle Dept.</span>
										  </td>
									      <td class="pr-0">
									      	<span>Canadian Renewal</span>
							    					
					           			  </td>
									      <td>
									      	
									      </td>
									    </tr>
									    <tr>
									      <td scope = "row" class="owner-card-cell-border-right">
											<span>05/01/2018</span>
					 					  </td>
									      <td class="owner-card-cell-border-right">
									        <span>AB</span>
									      </td>
									      <td class="owner-card-cell-border-right">
									      	
										  </td>
									      <td class="owner-card-cell-border-right"> <!--Data Source-->
									      	 
								
											<span>Motor Vehicle Dept.</span>
										  </td>
									      <td class="pr-0">
									      	<span>Canadian Renewal</span>
							    					
					           			  </td>
									      <td>
									      	
									      </td>
									    </tr>
									    <tr>
									      <td scope = "row" class="owner-card-cell-border-right">
											<span>05/06/2019</span>
					 					  </td>
									      <td class="owner-card-cell-border-right">
									        <span>AB</span>
									      </td>
									      <td class="owner-card-cell-border-right">
									      	
										  </td>
									      <td class="owner-card-cell-border-right"> <!--Data Source-->
									      	 
								
											<span>Motor Vehicle Dept.</span>
										  </td>
									      <td class="pr-0">
									      	<span>Canadian Renewal</span>
							    					
					           			  </td>
									      <td>
									      	
									      </td>
									    </tr>
									    <tr>
									      <td scope = "row" class="owner-card-cell-border-right">
											<span>10/11/2019</span>
					 					  </td>
									      <td class="owner-card-cell-border-right">
									        <span>SPRUCE GROVE, AB</span>
									      </td>
									      <td class="owner-card-cell-border-right">
									      	<span>35,000</span>
										  </td>
									      <td class="owner-card-cell-border-right"> <!--Data Source-->
									      	 
								
											<span>Damage Report</span>
										  </td>
									      <td class="pr-0">
									      	<span>Accident or Collision Reported<br>Vehicle Damage Reported<br>Body Repair Performed<br>Glass Repair Performed</span>
							    					
					           			  </td>
									      <td>
									      	<img class="timeline-icon-desktop" src="https://www.autocheck.com/reportservice/report/fullReport/img/dvh-timeline-icon-accident-orange.svg" alt="dvh-timeline-icon-accident-orange.svg"/>
									      </td>
									    </tr>
									    <tr>
									      <td scope = "row" class="owner-card-cell-border-right">
											<span>05/21/2020</span>
					 					  </td>
									      <td class="owner-card-cell-border-right">
									        <span>AB</span>
									      </td>
									      <td class="owner-card-cell-border-right">
									      	
										  </td>
									      <td class="owner-card-cell-border-right"> <!--Data Source-->
									      	 
								
											<span>Motor Vehicle Dept.</span>
										  </td>
									      <td class="pr-0">
									      	<span>Canadian Renewal</span>
							    					
					           			  </td>
									      <td>
									      	
									      </td>
									    </tr>
									    <tr>
									      <td scope = "row" class="owner-card-cell-border-right">
											<span>05/20/2021</span>
					 					  </td>
									      <td class="owner-card-cell-border-right">
									        <span>AB</span>
									      </td>
									      <td class="owner-card-cell-border-right">
									      	<span>154,597 Km*</span>
										  </td>
									      <td class="owner-card-cell-border-right"> <!--Data Source-->
									      	 
								
											<span>Motor Vehicle Dept.</span>
										  </td>
									      <td class="pr-0">
									      	<span>Canadian Renewal</span>
							    					
					           			  </td>
									      <td>
									      	
									      </td>
									    </tr>
									    <tr>
									      <td scope = "row" class="owner-card-cell-border-right">
											<span>05/19/2022</span>
					 					  </td>
									      <td class="owner-card-cell-border-right">
									        <span>AB</span>
									      </td>
									      <td class="owner-card-cell-border-right">
									      	
										  </td>
									      <td class="owner-card-cell-border-right"> <!--Data Source-->
									      	 
								
											<span>Motor Vehicle Dept.</span>
										  </td>
									      <td class="pr-0">
									      	<span>Canadian Renewal</span>
							    					
					           			  </td>
									      <td>
									      	
									      </td>
									    </tr>
									    <tr>
									      <td scope = "row" class="owner-card-cell-border-right">
											<span>07/17/2024</span>
					 					  </td>
									      <td class="owner-card-cell-border-right">
									        <span>AB</span>
									      </td>
									      <td class="owner-card-cell-border-right">
									      	
										  </td>
									      <td class="owner-card-cell-border-right"> <!--Data Source-->
									      	 
								
											<span>Motor Vehicle Dept.</span>
										  </td>
									      <td class="pr-0">
									      	<span>Canadian Renewal</span>
							    					
					           			  </td>
									      <td>
									      	
									      </td>
									    </tr>
									    <tr>
									      <td scope = "row" class="owner-card-cell-border-right">
											<span>12/06/2024</span>
					 					  </td>
									      <td class="owner-card-cell-border-right">
									        <span>AB</span>
									      </td>
									      <td class="owner-card-cell-border-right">
									      	
										  </td>
									      <td class="owner-card-cell-border-right"> <!--Data Source-->
									      	 
								
											<span>Motor Vehicle Dept.</span>
										  </td>
									      <td class="pr-0">
									      	<span>Canadian Renewal</span>
							    					
					           			  </td>
									      <td>
									      	
									      </td>
									    </tr>
									    <tr>
									      <td scope = "row" class="owner-card-cell-border-right">
											<span>12/06/2024</span>
					 					  </td>
									      <td class="owner-card-cell-border-right">
									        <span>AB</span>
									      </td>
									      <td class="owner-card-cell-border-right">
									      	
										  </td>
									      <td class="owner-card-cell-border-right"> <!--Data Source-->
									      	 
								
											<span>Motor Vehicle Dept.</span>
										  </td>
									      <td class="pr-0">
									      	<span>Canadian Renewal</span>
							    					
					           			  </td>
									      <td>
									      	
									      </td>
									    </tr>
									   </tbody>
									</table>
			          			</div>
			        		</div>
			     		 </div>
			          	</div>
			        </div>
			        </div>
			      </div>
			    </div>
			    
			  </div> 
			  <div class="historyNotes">
			    <p><br>* Odometer readings can be in mixed unit of measure - kilometers and miles</p >
			    
			  </div>
			  </div>
			  
			<!--Table and Mobile-->
			<div class="container py-2 mt-2 mb-2 d-lg-none history-web-no-print">
			  <div> 	
		
			  
			  	
			 	<div class="row">
			  		<div class="col w-50">
			  			&nbsp;
			  		</div>
						<span class="mobile-badge-margin h4"> 
				    		<span class="badge badge-blue">
			         			<span>2016</span>
			        		</span>
				   		</span >
				   	<div class="col w-50">
				   		&nbsp;
			  		</div>
			  	</div>
			  	<div class="row">
			  		<div class="col w-50">
			  			&nbsp;
			  		</div>
						<span class="mobile-timeline-border"></span>
				   	<div class="col w-50">
				   		&nbsp;
			  		</div>
			  	</div>
			  <div class="row">
			    <div class="col py-0 pr-2 pl-2">
			      <div class="card owner-card-radius">
		      		<div class="card-header owner-header"  data-toggle="collapse" data-target="#collapse-999-KMHD84LFXHU146438">
		      			<span class="arrow">
		      		 		
							<a data-toggle="collapse" href="#collapse-999-KMHD84LFXHU146438" 
							id="heading-999-KMHD84LFXHU146438" class="d-block collapse-link blue" aria-expanded="true" aria-controls="collapse-999-KMHD84LFXHU146438">
		      				
		      					<span>All Reported Events</span>
		      					
							</a>
						</span>
					</div>
  					<div id="collapse-999-KMHD84LFXHU146438" class="collapse show" aria-labelledby="heading-999-KMHD84LFXHU146438">
			        <div class="card-body pt-1 pb-1">
			         <p class="card-text">
			          	 <div class="card owner-card-radius">
			      			
			      			
			        		
			       			<div class="card-header owner-card-header-white">
			      				
			        		</div>
			        		
			        		<div class="card-body pt-0 pb-0 px-0">
			          			<div class="card-text"> 
			          				<div class="p-2 mobile-card-bottom mobile-card-grey" >
			          					<p>
			          						<span class="mobile-label blue">Event Date - </span>
			          						<span>05/17/2016</span>
			          						
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Location - </span>
			          						 <span>CALGARY, AB</span>
			          					</p>
			          					
			          					<p>
			          						<span class="mobile-label blue">Data Source - </span>
			          						 
								
											<span>Motor Vehicle Dept.</span>
										</p>
			          					<p>
			          						<span class="mobile-label blue">Details  - </span>
			          						<span>Canadian Renewal<br>Rental</p>
			          				</div> 
			          				<div class="p-2 mobile-card-bottom mobile-card-white" >
			          					<p>
			          						<span class="mobile-label blue">Event Date - </span>
			          						<span>12/05/2016</span>
			          						
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Location - </span>
			          						 <span>CALGARY, AB</span>
			          					</p>
			          					
			          					<p>
			          						<span class="mobile-label blue">Data Source - </span>
			          						 
								
											<span>Motor Vehicle Dept.</span>
										</p>
			          					<p>
			          						<span class="mobile-label blue">Details  - </span>
			          						<span>Canadian Renewal<br>Rental</p>
			          				</div> 
			          				<div class="p-2 mobile-card-bottom mobile-card-grey" >
			          					<p>
			          						<span class="mobile-label blue">Event Date - </span>
			          						<span>03/04/2017</span>
			          						
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Location - </span>
			          						 <span>AB</span>
			          					</p>
			          					
			          					<p>
			          						<span class="mobile-label blue">Data Source - </span>
			          						 
								
											<span>Motor Vehicle Dept.</span>
										</p>
			          					<p>
			          						<span class="mobile-label blue">Details  - </span>
			          						<span>Canadian Renewal</p>
			          				</div> 
			          				<div class="p-2 mobile-card-bottom mobile-card-white" >
			          					<p>
			          						<span class="mobile-label blue">Event Date - </span>
			          						<span>05/01/2018</span>
			          						
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Location - </span>
			          						 <span>AB</span>
			          					</p>
			          					
			          					<p>
			          						<span class="mobile-label blue">Data Source - </span>
			          						 
								
											<span>Motor Vehicle Dept.</span>
										</p>
			          					<p>
			          						<span class="mobile-label blue">Details  - </span>
			          						<span>Canadian Renewal</p>
			          				</div> 
			          				<div class="p-2 mobile-card-bottom mobile-card-grey" >
			          					<p>
			          						<span class="mobile-label blue">Event Date - </span>
			          						<span>05/06/2019</span>
			          						
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Location - </span>
			          						 <span>AB</span>
			          					</p>
			          					
			          					<p>
			          						<span class="mobile-label blue">Data Source - </span>
			          						 
								
											<span>Motor Vehicle Dept.</span>
										</p>
			          					<p>
			          						<span class="mobile-label blue">Details  - </span>
			          						<span>Canadian Renewal</p>
			          				</div> 
			          				<div class="p-2 mobile-card-bottom mobile-card-white" >
			          					<p>
			          						<span class="mobile-label blue">Event Date - </span>
			          						<span>10/11/2019</span>
			          						<img class="timeline-icon-mobile" src="https://www.autocheck.com/reportservice/report/fullReport/img/dvh-timeline-icon-accident-orange.svg" alt="dvh-timeline-icon-accident-orange.svg"
			          						/>
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Location - </span>
			          						 <span>SPRUCE GROVE, AB</span>
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Odometer - </span>
			          						<span>35,000</span>
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Data Source - </span>
			          						 
								
											<span>Damage Report</span>
										</p>
			          					<p>
			          						<span class="mobile-label blue">Details  - </span>
			          						<span>Accident or Collision Reported<br>Vehicle Damage Reported<br>Body Repair Performed<br>Glass Repair Performed</p>
			          				</div> 
			          				<div class="p-2 mobile-card-bottom mobile-card-grey" >
			          					<p>
			          						<span class="mobile-label blue">Event Date - </span>
			          						<span>05/21/2020</span>
			          						
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Location - </span>
			          						 <span>AB</span>
			          					</p>
			          					
			          					<p>
			          						<span class="mobile-label blue">Data Source - </span>
			          						 
								
											<span>Motor Vehicle Dept.</span>
										</p>
			          					<p>
			          						<span class="mobile-label blue">Details  - </span>
			          						<span>Canadian Renewal</p>
			          				</div> 
			          				<div class="p-2 mobile-card-bottom mobile-card-white" >
			          					<p>
			          						<span class="mobile-label blue">Event Date - </span>
			          						<span>05/20/2021</span>
			          						
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Location - </span>
			          						 <span>AB</span>
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Odometer - </span>
			          						<span>154,597 Km*</span>
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Data Source - </span>
			          						 
								
											<span>Motor Vehicle Dept.</span>
										</p>
			          					<p>
			          						<span class="mobile-label blue">Details  - </span>
			          						<span>Canadian Renewal</p>
			          				</div> 
			          				<div class="p-2 mobile-card-bottom mobile-card-grey" >
			          					<p>
			          						<span class="mobile-label blue">Event Date - </span>
			          						<span>05/19/2022</span>
			          						
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Location - </span>
			          						 <span>AB</span>
			          					</p>
			          					
			          					<p>
			          						<span class="mobile-label blue">Data Source - </span>
			          						 
								
											<span>Motor Vehicle Dept.</span>
										</p>
			          					<p>
			          						<span class="mobile-label blue">Details  - </span>
			          						<span>Canadian Renewal</p>
			          				</div> 
			          				<div class="p-2 mobile-card-bottom mobile-card-white" >
			          					<p>
			          						<span class="mobile-label blue">Event Date - </span>
			          						<span>07/17/2024</span>
			          						
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Location - </span>
			          						 <span>AB</span>
			          					</p>
			          					
			          					<p>
			          						<span class="mobile-label blue">Data Source - </span>
			          						 
								
											<span>Motor Vehicle Dept.</span>
										</p>
			          					<p>
			          						<span class="mobile-label blue">Details  - </span>
			          						<span>Canadian Renewal</p>
			          				</div> 
			          				<div class="p-2 mobile-card-bottom mobile-card-grey" >
			          					<p>
			          						<span class="mobile-label blue">Event Date - </span>
			          						<span>12/06/2024</span>
			          						
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Location - </span>
			          						 <span>AB</span>
			          					</p>
			          					
			          					<p>
			          						<span class="mobile-label blue">Data Source - </span>
			          						 
								
											<span>Motor Vehicle Dept.</span>
										</p>
			          					<p>
			          						<span class="mobile-label blue">Details  - </span>
			          						<span>Canadian Renewal</p>
			          				</div> 
			          				<div class="p-2 mobile-card-bottom mobile-card-white" >
			          					<p>
			          						<span class="mobile-label blue">Event Date - </span>
			          						<span>12/06/2024</span>
			          						
			          					</p>
			          					<p>
			          						<span class="mobile-label blue">Location - </span>
			          						 <span>AB</span>
			          					</p>
			          					
			          					<p>
			          						<span class="mobile-label blue">Data Source - </span>
			          						 
								
											<span>Motor Vehicle Dept.</span>
										</p>
			          					<p>
			          						<span class="mobile-label blue">Details  - </span>
			          						<span>Canadian Renewal</p>
			          				</div>
			          			</div>
			        		</div>
			     		 </div>
			          	</p>
			        </div>
			        </div>
			      </div>
			    </div>
			  </div>
			  </div>
			  <div class="historyNotes">
			    <p><br>* Odometer readings can be in mixed unit of measure - kilometers and miles</p >
			    
			  </div>
			</div><!--mobile container-->
        </div>
          			</div>
         
         			<!--Prequal Ad #2   temp removed-->
          			<!--<th:block th:if="${form.fastLink and (form.memberRequestProfile.showFastlinkConfiguration) }">
                  		<th:block th:if="${form.memberRequestProfile.fastlinkConfiguration.fstlnkPrequalDispIn}">
                      		<th:block th:insert="~{includes/fullReport/prequalBanner2_include.html}" ></th:block>
                  		</th:block>
              		</th:block>-->
         
         			<div id="glossary" class="noPrint">
	<div class="header">
		<span>This Vehicle&#39;s Glossary</span><span><a class="backtotop-link" href="#" data-top-id="top-KMHD84LFXHU146438">Back To Top</a></span>
	</div>
	<div class="info-section row mx-0 text-center">
		<div class="col-12">
			<p>
				<span class="info-section-text">
					More information is available in the full
					
					
					<a href="https://www.autocheck.com/members/freelink_glossary.do" target="_blank">
						AutoCheck glossary.
					</a>
				</span>
			</p>
		</div>
	</div>
	<!-- Desktop -->
  	<div class="section-data">
		<div class="col-12 mx-auto" id="glossary-section">
			<div class="rTable d-none d-md-table">
				<div class="glossary-table-header">
					<div class="rTableHead w-25">Term</div>
					<div class="rTableHead w-25 pl-1">Section Location</div>
					<div class="rTableHead w-50 pl-0">Definition</div>
				</div>
				<div class="d-block glossary-table-body">
					<div class="rTableRow">
						<div class="rTableCell w-25">
							<span>State Title Brand</span>
						</div>
						<div class="rTableCell w-25">
							<span>Vehicle History at a Glance</span>
						</div>
						<div class="rTableCell w-50">
							<span>A "branded title" is an official designation assigned by a state agency to associate a particular history with a vehicle. The branding system was put in place to warn potential owners about damage or other alterations to a vehicle that they might otherwise have been unaware of.  The brands checked in this section are Fire, Hail, Flood, Junk/Scrapped, Lemon, Salvage, Rebuilt/Rebuildable, Odometer Brands (not actual miles, broken odometer, exceeding mechanical limits, mileage discrepancy, or suspect miles).  Please note Grey Market and Insurance Loss or Theft brands are not checked in this box and can be found on other corresponding boxes.</span>
						</div>
					</div>
					<div class="rTableRow">
						<div class="rTableCell w-25">
							<span>Auction Issue</span>
						</div>
						<div class="rTableCell w-25">
							<span>Vehicle History at a Glance</span>
						</div>
						<div class="rTableCell w-50">
							<span>This section summarizes any issues if reported such as damage condition from seller's disclosure or during the inspection process including required structural damage disclosure, title brands, odometer issues, etc. as outlined by the <a href='https://www.naaa.com/Policy/Policy_PDFs/2023_Arbitration_Policy_Effective_4_3_23/NAAA_Arbitration_Policy_EFFECTIVE_April2023_FINAL.pdf' target='_blank'>2023 National Auto Auction Association Policy.</a></span>
						</div>
					</div>
					<div class="rTableRow">
						<div class="rTableCell w-25">
							<span>Accident/Damage Check</span>
						</div>
						<div class="rTableCell w-25">
							<span>Vehicle History at a Glance</span>
						</div>
						<div class="rTableCell w-50">
							<span>This section summarizes vehicle history events that may indicate an accident or damage and associated details such as point of impact, severity or airbag deployed if provided. These damage events will include collision damage information, police-reported accidents, salvage auction, recycler records, crash test vehicles, collision damage claims etc. including our exclusive auction announcements from two major auctions that may include damage events. There is also a clearly delineated section that includes non-collision damage events such as fire, hail or flood. Damage-indicated title brands will be in the state title brands section.</span>
						</div>
					</div>
					<div class="rTableRow">
						<div class="rTableCell w-25">
							<span>Insurance Loss/Title Transfer</span>
						</div>
						<div class="rTableCell w-25">
							<span>Vehicle History at a Glance</span>
						</div>
						<div class="rTableCell w-50">
							<span>This box checked to see if there is an insurance total loss or if a title has been transferred to an insurance company name as that event usually signifies that it is a total loss when showing after an accident.</span>
						</div>
					</div>
					<div class="rTableRow">
						<div class="rTableCell w-25">
							<span>Additional History</span>
						</div>
						<div class="rTableCell w-25">
							<span>Vehicle History at a Glance</span>
						</div>
						<div class="rTableCell w-50">
							<span>This section lists any other significant events that may not be a damage event or brand, but does give additional insights of the vehicle's history.  These include abandoned, grey market, lien check, repossessed, theft etc.</span>
						</div>
					</div>
					<div class="rTableRow">
						<div class="rTableCell w-25">
							<span>Odometer Check</span>
						</div>
						<div class="rTableCell w-25">
							<span>Vehicle History at a Glance</span>
						</div>
						<div class="rTableCell w-50">
							<span>This section verifies if there are rollbacks, rollover or tampering has been reported to AutoCheck from state Division of Motor Vehicles (DMV) or auction sources. AutoCheck also examined the sequence of reported odometer readings to determine if there are any potential discrepancies.</span>
						</div>
					</div>
					<div class="rTableRow">
						<div class="rTableCell w-25">
							<span>Rental Use</span>
						</div>
						<div class="rTableCell w-25">
							<span>Owner Type</span>
						</div>
						<div class="rTableCell w-50">
							<span>The vehicle has been reported as used as a rental vehicle.</span>
						</div>
					</div>
					<div class="rTableRow">
						<div class="rTableCell w-25">
							<span>Accident</span>
						</div>
						<div class="rTableCell w-25">
							<span>Accident / Damage</span>
						</div>
						<div class="rTableCell w-50">
							<span>A state or municipality has reported an accident or collision for this vehicle that may or may not have sustained damage. Not all damage events are reported to AutoCheck and the damage severity of reported events will vary.   In all events AutoCheck recommends that prospective vehicle purchasers conduct a detailed vehicle inspection prior to purchase of a pre-owned vehicle.</span>
						</div>
					</div>
				</div>
			</div>
			<!-- Mobile -->
			<div class="row d-md-none">
				<div class="mx-auto glossary-table-body" id="glossary-section-sm">
					<div class="rTable">
						<div class="rTableRow">
							<div class="rTableCell">
								<p>
									<b>Term - </b>
									<span>State Title Brand</span>
								</p>
								<p>
									<b>Section Location - </b>
									<span>Vehicle History at a Glance</span>
								</p>
								<p>
									<b>Definition - </b>
									<span>A "branded title" is an official designation assigned by a state agency to associate a particular history with a vehicle. The branding system was put in place to warn potential owners about damage or other alterations to a vehicle that they might otherwise have been unaware of.  The brands checked in this section are Fire, Hail, Flood, Junk/Scrapped, Lemon, Salvage, Rebuilt/Rebuildable, Odometer Brands (not actual miles, broken odometer, exceeding mechanical limits, mileage discrepancy, or suspect miles).  Please note Grey Market and Insurance Loss or Theft brands are not checked in this box and can be found on other corresponding boxes.</span>
								</p>
							</div>
						</div>
						<div class="rTableRow">
							<div class="rTableCell">
								<p>
									<b>Term - </b>
									<span>Auction Issue</span>
								</p>
								<p>
									<b>Section Location - </b>
									<span>Vehicle History at a Glance</span>
								</p>
								<p>
									<b>Definition - </b>
									<span>This section summarizes any issues if reported such as damage condition from seller's disclosure or during the inspection process including required structural damage disclosure, title brands, odometer issues, etc. as outlined by the <a href='https://www.naaa.com/Policy/Policy_PDFs/2023_Arbitration_Policy_Effective_4_3_23/NAAA_Arbitration_Policy_EFFECTIVE_April2023_FINAL.pdf' target='_blank'>2023 National Auto Auction Association Policy.</a></span>
								</p>
							</div>
						</div>
						<div class="rTableRow">
							<div class="rTableCell">
								<p>
									<b>Term - </b>
									<span>Accident/Damage Check</span>
								</p>
								<p>
									<b>Section Location - </b>
									<span>Vehicle History at a Glance</span>
								</p>
								<p>
									<b>Definition - </b>
									<span>This section summarizes vehicle history events that may indicate an accident or damage and associated details such as point of impact, severity or airbag deployed if provided. These damage events will include collision damage information, police-reported accidents, salvage auction, recycler records, crash test vehicles, collision damage claims etc. including our exclusive auction announcements from two major auctions that may include damage events. There is also a clearly delineated section that includes non-collision damage events such as fire, hail or flood. Damage-indicated title brands will be in the state title brands section.</span>
								</p>
							</div>
						</div>
						<div class="rTableRow">
							<div class="rTableCell">
								<p>
									<b>Term - </b>
									<span>Insurance Loss/Title Transfer</span>
								</p>
								<p>
									<b>Section Location - </b>
									<span>Vehicle History at a Glance</span>
								</p>
								<p>
									<b>Definition - </b>
									<span>This box checked to see if there is an insurance total loss or if a title has been transferred to an insurance company name as that event usually signifies that it is a total loss when showing after an accident.</span>
								</p>
							</div>
						</div>
						<div class="rTableRow">
							<div class="rTableCell">
								<p>
									<b>Term - </b>
									<span>Additional History</span>
								</p>
								<p>
									<b>Section Location - </b>
									<span>Vehicle History at a Glance</span>
								</p>
								<p>
									<b>Definition - </b>
									<span>This section lists any other significant events that may not be a damage event or brand, but does give additional insights of the vehicle's history.  These include abandoned, grey market, lien check, repossessed, theft etc.</span>
								</p>
							</div>
						</div>
						<div class="rTableRow">
							<div class="rTableCell">
								<p>
									<b>Term - </b>
									<span>Odometer Check</span>
								</p>
								<p>
									<b>Section Location - </b>
									<span>Vehicle History at a Glance</span>
								</p>
								<p>
									<b>Definition - </b>
									<span>This section verifies if there are rollbacks, rollover or tampering has been reported to AutoCheck from state Division of Motor Vehicles (DMV) or auction sources. AutoCheck also examined the sequence of reported odometer readings to determine if there are any potential discrepancies.</span>
								</p>
							</div>
						</div>
						<div class="rTableRow">
							<div class="rTableCell">
								<p>
									<b>Term - </b>
									<span>Rental Use</span>
								</p>
								<p>
									<b>Section Location - </b>
									<span>Owner Type</span>
								</p>
								<p>
									<b>Definition - </b>
									<span>The vehicle has been reported as used as a rental vehicle.</span>
								</p>
							</div>
						</div>
						<div class="rTableRow">
							<div class="rTableCell">
								<p>
									<b>Term - </b>
									<span>Accident</span>
								</p>
								<p>
									<b>Section Location - </b>
									<span>Accident / Damage</span>
								</p>
								<p>
									<b>Definition - </b>
									<span>A state or municipality has reported an accident or collision for this vehicle that may or may not have sustained damage. Not all damage events are reported to AutoCheck and the damage severity of reported events will vary.   In all events AutoCheck recommends that prospective vehicle purchasers conduct a detailed vehicle inspection prior to purchase of a pre-owned vehicle.</span>
								</p>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
         			
         		
 					
   
 	    				
 	    			
 	    				
 	    			
 	    				 
					
		
				</main>
       			
 	   			<footer>
 	  				        <!--T&C-->
        <div class="row termsRow">
            <div class="col-10 mx-auto mt-4 full-report__terms">
                <p>
                	<span class="font-weight-bold">AutoCheck Terms and Conditions</span>
                    <br>This report, and any reliance upon it, is subject to  <a href="https://www.autocheck.com/members/terms.do" target="_blank">AutoCheck Terms and Conditions</a>. If you obtained the report from a lender/dealer, the lender/dealer has been provided with these Terms and Conditions and can share them with you. These AutoCheck Terms and Conditions are also available at any time at  www.autocheck.com/terms
                    or by writing to Experian: Experian Automotive C/O AutoCheck Customer Service 1515 E. Woodfield Road, Suite 500, Schaumburg, IL 60173.
                </p>

                <p>
                	<span class="font-weight-bold">Buyback Protection Terms and Conditions</span>
                    <br>
                    
                     
                    
                        This vehicle (<span>KMHD84LFXHU146438</span>) qualifies for 
                         <span><a href="https://www.autocheck.com/bbpterms" target="_blank">AutoCheck Buyback Protection.</a></span>
                          If you obtained the report from a dealer, the dealer has been provided with the terms and can share them with you. These Buyback Protection Terms and Conditions are also available to you at any time at 
                    
                    
                    <span>www.autocheck.com/bbpterms</span> 
                     
                    
                    or by writing to Experian: Experian Automotive C/O AutoCheckCustomer Service 1515 E. Woodfield Road, Suite 500, Schaumburg, IL 60173.
                    
                    
                </p>

                <p>
                	<span class="font-weight-bold">About AutoCheck</span>
                    <br>AutoCheck vehicle history reports by Experian Automotive is the leading vehicle history reporting service.  Every AutoCheck vehicle history report will give you confidence when buying or selling your next used vehicle, with superior customer service every step of the way.
                </p>

                <p>
                	<span class="font-weight-bold">Patent Notice</span>
                	<br>Certain aspects of this vehicle history report may be covered by U.S. Patent 8,005,759.
                </p>
            </div>
        </div>
	    		</footer>
	    		
	   	 <!--END Web Version-->
      	
      	
	     <!--Print Version-->
      	<!-- END Print Version-->
      	</div>
	    
      <!--Vieweable Block -->
     
     
 
 </div> 
		
		
		<!-- request from external -->
		
</div></div> 
</div>
</div>
</body>
</html><script>document.querySelector(".dealer-label").remove();</script>